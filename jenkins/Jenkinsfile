pipeline {

    agent none

    stages {

        stage('Build') {

            agent {

                docker {

                    image 'python:2-alpine'

                }

            }

            steps {

                sh 'python -m py_compile server/app.py'

            }

        }

        stage('Test') {

            agent {

                docker {

                    image 'qnib/pytest'

                }

            }
            steps {
                sh 'py.test --verbose --junit-xml test-reports/results.xml tests/test_user.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }

        }
                stage('System - Test') {

            agent {

                docker {

                    image 'qnib/pytest'

                }

            }
            steps {
                sh 'py.test --verbose --junit-xml test-reports/system_results.xml tests/test_system.py'
            }
            post {
                always {
                    junit 'test-reports/system_results.xml'
                }
            }

        }
        post {
        failure {
            withEnv(["HOME=${env.WORKSPACE}"]) {
                withCredentials([string(credentialsId: 'MAIL_PASS', variable: 'PASS_ONLY')]) {
		    echo "${currentBuild.fullDisplayName} AAAA ${currentBuild.result} BBBB ${env.BUILD_URL}"
                    //sh 'python3 send_mail.py "Jenkins Build ${currentBuild.fullDisplayName} ${currentBuild.result}" "The last build failed, check it! url: ${env.BUILD_URL}"'
                    sh 'python3 send_mail.py "Jenkins Build Failed" "The last build failed, check it!"'
		}
            }
            //mail bcc: '', body: 'build executed', cc: '', from: '', replyTo: '', subject: 'build', to: 'cureonaapp@gmail.com'
        }
    }
    }

}
